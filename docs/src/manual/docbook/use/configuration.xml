<?xml version="1.0" encoding="UTF-8"?>
<chapter version="5.0"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd   http://www.w3.org/1999/xlink http://www.docbook.org/xml/5.0/xsd/xlink.xsd   http://www.w3.org/2001/XMLSchema-instance http://www.w3.org/2001/XMLSchema-instance.xsd"
         xml:id="install.configuration" xmlns="http://docbook.org/ns/docbook"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:ns="http://docbook.org/ns/docbook">
  <title>How to use</title>
  <para>This section explains how to use the .netbridge.</para>
  <section>
    <title>Introducation</title> This section explains how to use the .netbridge. All the domains
    and connectors in OpenEngSB are written in java. So if you want to use a onther language like
    for example C# to communicate with the domain, you have to translate all the commands from java
    to C# and back. If you had to do that for every connector, it would be a lot of work and it
    would be difficult to handel changes on versions. For this problem, the .netbridge has been
    created. It registers a connector and profites the functions, to invoke methods in the
      domain.<title>Domaindescription</title>To communicate with a domain, it is required to get the
    interfacedesciptions. These have the nameconvention: [DomainName]Domain and
    [DomainName]DomainEvents. When building the domain, these information are encoded in a wsdl. In
    other words, after building there are two wsdl, which descripes how to communicate with this
    domain. These informations have to be translated to dll and included into c#. There are two ways
    to do this, which are explaned in the following paragraphs</section>
  <section><title>Wsdl to dll (With the maven plugin)</title>To have an easy and fast way, to build
    the dll from a wsdl, a maven plugin has been introduced. The name of the plugin is ADSDD and has
    the followinf structure: 
    <section>
      <title>Functional Interface</title>
      <para>The following listing presents the Java Domain Interface. This interface also contains information 
        about events raised by this domain.</para>
      <xi:include href="docbook/use/TestDomain.xml"/>
    </section>
  </section>
</chapter>
